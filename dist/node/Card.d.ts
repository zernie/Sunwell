import CardDef from "./CardDef";
import AttackGem from "./Components/AttackGem";
import BodyText from "./Components/BodyText";
import CardArt from "./Components/CardArt";
import CardFrame from "./Components/CardFrame";
import CostGem from "./Components/CostGem";
import EliteDragon from "./Components/EliteDragon";
import HealthGem from "./Components/HealthGem";
import MultiClassBanner from "./Components/MultiClassBanner";
import NameBanner from "./Components/NameBanner";
import RaceBanner from "./Components/RaceBanner";
import RarityGem from "./Components/RarityGem";
import Watermark from "./Components/Watermark";
import { ICoords, IPoint } from "./interfaces";
import Sunwell from "./Sunwell";
import { Canvas, Context, Image } from "./platforms/CurrentPlatform";
export default abstract class Card {
    cardDef: CardDef;
    target: any;
    texture: any;
    canvas: Canvas;
    raceText: string;
    language: string;
    costColor: string;
    attackColor: string;
    healthColor: string;
    width: number;
    key: number;
    opposing: boolean;
    attackGem: AttackGem;
    bodyText: BodyText;
    cardArt: CardArt;
    cardFrame: CardFrame;
    costGem: CostGem;
    eliteDragon: EliteDragon;
    healthGem: HealthGem;
    multiClassBanner: MultiClassBanner;
    raceBanner: RaceBanner;
    nameBanner: NameBanner;
    rarityGem: RarityGem;
    watermark: Watermark;
    eliteDragonAsset: string;
    eliteDragonCoords: ICoords;
    raceBannerAsset: string;
    raceTextCoords: ICoords;
    raceBannerCoords: ICoords;
    abstract baseCardFrameAsset: string;
    abstract baseCardFrameCoords: ICoords;
    abstract baseRarityGemAsset: string;
    abstract bodyTextColor: string;
    abstract bodyTextCoords: ICoords;
    abstract nameBannerAsset: string;
    abstract nameBannerCoords: ICoords;
    abstract rarityGemCoords: ICoords;
    abstract nameTextCurve: {
        pathMiddle: number;
        maxWidth: number;
        curve: IPoint[];
    };
    abstract artClipPolygon: IPoint[];
    abstract artCoords: ICoords;
    abstract cardFoundationAsset: string;
    abstract cardFoundationCoords: ICoords;
    abstract premium: boolean;
    private callback;
    private cacheKey;
    private propsJson;
    private sunwell;
    constructor(sunwell: Sunwell, props: any);
    abstract getWatermarkCoords(): ICoords;
    getAttackGemAsset(): string;
    getAttackGemCoords(): ICoords;
    getAttackTextCoords(): ICoords;
    getCostGemCoords(): ICoords;
    getCostTextCoords(): ICoords;
    getCostGemAsset(): string;
    getHealthGemAsset(): string;
    getHealthGemCoords(): ICoords;
    getHealthTextCoords(): ICoords;
    initRender(width: number, target: any, callback?: (canvas: Canvas) => void): void;
    getAssetsToLoad(): string[];
    getCardArtTexture(): Image | Canvas;
    draw(canvas: Canvas, context: Context): void;
    getBodyText(): string;
    drawCardFoundationAsset(context: Context, ratio: number): void;
    getCardFrameAsset(): string;
    getEliteDragonAsset(): string;
    getMultiClassBannerAsset(): string;
    getRarityGemAsset(): string;
    getWatermarkAsset(): string;
    private checksum;
}
